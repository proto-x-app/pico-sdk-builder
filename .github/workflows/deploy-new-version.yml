name: Deploy New Version

# Only deploy when a new tag is pushed
on:
  push:
    tags:
      - "v*.*.*"

env:
  SDK_REPOSITORY: https://github.com/proto-x-app/pico-sdk.git
  APP_REPOSITORY: https://github.com/proto-x-app/pico-examples.git

# Allow this workflow to write back to the repository
permissions:
  contents: write

# Build binary and send to releases
jobs:
  build-deploy:
    runs-on: ubuntu-latest
    name: Build and deploy
    env:
      DOCKER_IMAGE_NAME: ${{ github.event.repository.name }}
      DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      TAG_NAME: ${{ github.ref_name }}
    steps:

      - name: Check out this repository
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build --build-arg SDK_REPOSITORY=${{ env.SDK_REPOSITORY }} --build-arg APP_REPOSITORY=${{ env.APP_REPOSITORY }} -t $DOCKER_IMAGE_NAME .

      - name: Create Docker container
        run: docker create --name pico-builder-container $DOCKER_IMAGE_NAME

      - name: Copy out .uf2 file
        run: docker cp pico-builder-container:/app/html/files ./firmware

      - name: Push to release
        uses: softprops/action-gh-release@v1
        with:
          files: ./firmware/*.uf2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          build-args: |
            SDK_REPOSITORY=${{ env.SDK_REPOSITORY }}
            APP_REPOSITORY=${{ env.APP_REPOSITORY }}
          push: true
          tags: |
            ${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:latest
            ${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ env.TAG_NAME }}
